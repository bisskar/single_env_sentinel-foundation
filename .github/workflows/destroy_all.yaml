name: Destroy all resources

on:
  workflow_dispatch:
    inputs:
        string:
          description: Environment
          required: true
          type: choice
          options:
          - main

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:  
  destroy:
    env:
      GITHUB_TOKEN: ${{ secrets.GIT_ORG_TOKEN }}
          
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ inputs.string }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.string }}
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: '${{ secrets.AZURE_CLIENT_ID }}'
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: >
            terraform init
            -backend-config="resource_group_name=${{secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME}}"
            -backend-config="storage_account_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME}}"
            -backend-config="container_name=${{secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME}}"
            -backend-config="use_oidc=true"
            -backend-config="subscription_id=${{secrets.AZURE_SUBSCRIPTION_ID}}"
            -backend-config="tenant_id=${{secrets.AZURE_TENANT_ID}}"
            -backend-config="client_id=${{secrets.AZURE_CLIENT_ID}}"
            -backend-config="use_azuread_auth=true"
            -backend-config="key=tfstate"

      - name: Terraform destroy
        id: destroy
        run: >
          terraform destroy -auto-approve
          -var 'location=${{vars.VAR_LOCATION}}'
          -var 'subscription_name=${{vars.VAR_SUBSCRIPTION_NAME}}'
          -var 'law_name=${{vars.VAR_LAW_NAME}}'
          && echo "::set-output name=exitcode::$?"
